#!/bin/bash
LOGDIR=log
GDBTIMEOUT=60
CRASHDIR=ramfs4/output/?/crashes
SORTDIR=output
EXE=mksquashfs-lzma
TEMPFILE=ef.test
CMDLINE="testfile test.squash -noappend -ef ef.test"

#[ -z $1 ] && echo "need tempfile name" && exit 1

out() {
      printf "$each\n$(cat temp.out)\n-----\n"
}

wrap() {
touch lock
for each in $CRASHDIR/id* 
      do
      [ ! -f "$each" ] && break
      printf "$each" 
      cp "$each" $TEMPFILE
      gdb -ex "run $CMDLINE" -ex "exploitable" -ex "bt" ./${EXE} -batch 2>/dev/null > temp.out &
      GDBPID=$!;TO=0
      until [ "$TO" -eq $GDBTIMEOUT ];
      do 
            TO=$(( $TO + 1 ))
            ! ps $GDBPID >/dev/null && break
            printf .
            sleep 1
      done
      ps $GDBPID >/dev/null && ( kill $GDBPID; printf "-" ) || printf "+"
      if grep -q "exited normally" temp.out 
            then echo "[skip]" 
                 rm "$each"
           else 
                 CLASS=$(grep Classific temp.out)
                 CLASS=${CLASS/*: /}
                 case $CLASS in
                       EXPLOITABLE)
                       echo " [!] $CLASS"
                       out >> ${LOGDIR}/exploitable.txt
                       mv "$each" ${SORTDIR}/ex."$(basename $each)"
                       ;;
                       PROBABLY_EXPLOITABLE)
                       echo " [.] $CLASS"
                       out >> ${LOGDIR}/probably_exploitable.txt
                       mv "$each" ${SORTDIR}/pex."$(basename $each)"
                       ;;
                       *)
                       echo " [o] $CLASS"
                       out >> ${LOGDIR}/other.txt
                       mv "$each" ${SORTDIR}/other/
                  esac

            rm temp.out
      fi
done
rm lock
}

if [ -z $2 ] 
  then
    while true; do inotifywait -q $CRASHDIR 2>&1 >/dev/null && wrap; done
  else
    wrap
fi
